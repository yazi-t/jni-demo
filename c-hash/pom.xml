<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>demo-sample</artifactId>
        <groupId>jni-example</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>c-hash</artifactId>

    <packaging>dll</packaging>

    <!-- DLL build configuration -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- Maven plugin for C/C++ -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>1.0-alpha-8</version>
                <extensions>true</extensions>
                <configuration>
                    <compilerProvider>generic-classic</compilerProvider>
                    <compilerExecutable>gcc</compilerExecutable>
                    <linkerExecutable>gcc</linkerExecutable>
                    <sources>
                        <source>
                            <directory>${basedir}/src/main/c/com/jni/hash</directory>

                            <!-- c file names to compile -->
                            <fileNames>
                                <fileName>MD5.c</fileName>
                                <fileName>HashEncryptor.c</fileName>
                            </fileNames>
                        </source>
                    </sources>
                    <compilerStartOptions>
                        <!-- JNI header locations - Resides inside the JDK installation -->
                        <compilerStartOption>-I "${JAVA_HOME}/include/"</compilerStartOption>
                        <compilerStartOption>-I "${JAVA_HOME}/include/win32/"</compilerStartOption>
                    </compilerStartOptions>
                    <linkerEndOptions>
                        <linkerEndOption>-shared</linkerEndOption>
                        <linkerEndOption>-fPIC</linkerEndOption>
                    </linkerEndOptions>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>